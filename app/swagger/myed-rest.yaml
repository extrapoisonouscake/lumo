openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger MyEd REST API
servers:
  - url: http://localhost:3000/swagger/proxy
paths:
  /users/currentUser:
    get:
      summary: Get the current user
      operationId: getCurrentUser
      tags:
        - users
      responses:
        200:
          description: The current user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /users/students:
    get:
      summary: Get all students associated with the current user
      operationId: getStudents
      tags:
        - users
      responses:
        200:
          description: The list of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Student"
  /users/currentUserPreferences:
    get:
      summary: Get the current user preferences
      operationId: getCurrentUserPreferences
      tags:
        - users
      responses:
        200:
          description: The current user preferences
          content:
            application/json:
              schema:
                type: object
                required:
                  - selectedLocale
                  - emailPrimary
                  - emailPrimaryDisabled
                  - selectedSecurityQuestion
                  - securityAnswer
                  - passwordRequirement
                  - errorsPasswordValidation #can be empty
                  - errorsSaveData #can be empty
                  - localeName
                  - securityQuestion
                  - minPassLength
                  - disabledLanguages #can be empty
                properties:
                  selectedLocale:
                    type: string
                    enum:
                      - "Canada"
                      - "French (Canada)"
                      - US
                  emailPrimary:
                    type: string
                  emailPrimaryDisabled:
                    type: boolean
                  emailAlternate:
                    type: string
                  emailAlternateDisabled:
                    type: boolean
                  emailGoogleDoc:
                    type: string
                  emailGoogleDocDisabled:
                    type: boolean
                  portalPhonePrimary:
                    type: string
                  portalPhonePrimaryLabel:
                    type: string
                  portalPhoneValidationExpression:
                    type: string
                  hidePortalPhonePrimary:
                    type: boolean
                  selectedSecurityQuestion:
                    type: string
                  securityAnswer:
                    type: string
                    format: hash
                  password:
                    type: string
                  passwordRequirement:
                    type: array
                    items:
                      type: string
                  errorsPasswordValidation:
                    type: array
                    items:
                      type: string
                  errorsSaveData:
                    type: array
                    items:
                      type: string
                  localeName:
                    type: array
                    items:
                      type: string
                  securityQuestion:
                    type: array
                    items:
                      type: string
                  minPassLength:
                    type: integer
                  disabledLanguages:
                    type: array
                    items:
                      type: string
  /workflows/enabled:
    get:
      summary: Determine if the workflows are enabled
      operationId: getAreWorkflowsEnabled
      tags:
        - workflows
      responses:
        200:
          description: A boolean value indicating if the workflows are enabled
          content:
            text/plain:
              schema:
                type: boolean
  /pages/homepage:
    get:
      summary: Get the homepage data
      operationId: getHomepage
      tags:
        - pages
      responses:
        200:
          description: The homepage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Page"
  /resources:
    get:
      summary: Get the data of the "Group Resources" section on the homepage
      operationId: getGroupResourcesData
      tags:
        - resources
      responses:
        200:
          description: The list of group resources
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - name
                    - id
                    - type
                  properties:
                    name:
                      type: string
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - "cttWebLink    "
  /students/{studentOid}/tasks:
    get:
      summary: Get the tasks for a student
      operationId: getStudentTasks
      tags:
        - students
      parameters:
        - name: studentOid
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: The list of tasks
          content:
            application/json:
              schema:
                type: object
                required:
                  - submissions
                  - todaysTasks
                  - tomorrowsTasks
                  - longTermTasks
                  - overdueTasks
                properties:
                  submissions:
                    type: array
                    items:
                      $ref: "#/components/schemas/StudentAssignment"
                  todaysTasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/StudentAssignment"
                  tomorrowsTasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/StudentAssignment"
                  longTermTasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/StudentAssignment"
                  overdueTasks: #can't be trusted
                    type: array
                    items:
                      $ref: "#/components/schemas/StudentAssignment"
  /students/{studentOid}/assignments/{assignmentOid}:
    get:
      summary: Get the assignment for a student
      operationId: getStudentAssignment
      tags:
        - students
      parameters:
        - name: studentOid
          in: path
          required: true
          schema:
            type: string
        - name: assignmentOid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The assignment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentAssignment"
  /lists/academics.classes.list:
    get:
      summary: Get the list of classes for a student
      operationId: getStudentClasses
      parameters:
        - name: count
          in: query
          schema:
            type: integer
        - name: customParams
          in: query
          schema:
            type: string
            pattern: "^selectedYear|(current|previous);selectedTerm|([a-zA-Z0-9]+)$"
        - name: fieldSetOid
          in: query
          schema:
            type: string
        - name: filter
          in: query
          description: "can be ###all"
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
        - name: selectedStudent
          in: query
          required: true
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: unique
          in: query
          schema:
            type: boolean
      tags:
        - lists
      responses:
        200:
          description: The list of classes
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Subject"
                    - type: object
                      properties:
                        cfTermAverage:
                          $ref: "#/components/schemas/NumberAsString"
                        sscTermView:
                          type: string
                          description: Term
  /lists/academics.classes.list/fieldSets:
    get:
      summary: Get the list of classes table field sets
      operationId: getStudentClassesFieldSets
      tags:
        - lists
      responses:
        200:
          description: The list of classes table field sets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - oid
                    - name
                  properties:
                    oid:
                      type: string
                    name:
                      type: string
  /lists/academics.classes.list/studentGradeTerms:
    get:
      summary: Get the grade terms for a student
      operationId: getStudentGradeTerms
      tags:
        - lists
      parameters:
        - name: selectedStudent
          in: query
          required: true
          schema:
            type: string
        - name: year
          in: query
          required: true
          schema:
            type: string
            enum:
              - current
              - "??"
        - name: term
          in: query
          required: true
          schema:
            type: string
            enum:
              - current
              - "??"
      responses:
        200:
          description: The list of grade terms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GradeTerm"
  /studentSchedule/{subjectOid}/academics:
    get:
      summary: Get the student academics
      operationId: getStudentAcademics
      tags:
        - students
      parameters:
        - name: subjectOid
          in: path
          required: true
          schema:
            type: string
        - name: selectedStudent
          in: query
          schema:
            type: string
        - name: properties
          in: query
          description: 'additional properties for the "section" object, e.g. relSscMstOid.mstDescription adds as relSscMstOid_mstDescription'
          schema:
            type: string
      responses:
        200:
          description: The student academics
          content:
            application/json:
              schema:
                type: object
                required:
                  - section
                  - terms
                  - hideFromGradeInput
                  - adjustedIconTitle
                  - averageSummary
                  - attendanceSummary
                  - cumulativeAverageLabel
                  - currentGradeTermIndex
                properties:
                  section:
                    type: object
                    required:
                      - oid
                    properties:
                      oid:
                        type: string
                      relSscMstOid_mstDescription:
                        type: string
                      relSscMstOid_mstCourseView:
                        type: string
                      sscTermView:
                        type: string
                  terms:
                    type: array
                    items:
                      type: string
                  hideFromGradeInput:
                    type: boolean
                  adjustedIconTitle:
                    type: string
                  averageSummary:
                    type: array
                    description: "The average summary for the subjects, each includes percentages for all terms as string-number and percentage{TERM} properties with a percent symbol included"
                    items:
                      $ref: "#/components/schemas/GradesObject"

                  attendanceSummary:
                    type: array
                    description: "The attendance summary for the subjects, each item includes properties for the number of absences for each term, with term id as key"
                    items:
                      type: object
                      required:
                        - total
                        - type
                      properties:
                        total:
                          type: integer
                        type:
                          type: string
                          enum:
                            - Absent
                            - Tardy
                            - Dismissed
                  cumulativeAverageLabel:
                    type: string
                  currentGradeTermIndex:
                    type: string
                  postedSummary:
                    type: array
                    description: "The posted summary for the subjects, each item includes properties for each term with the term id as key"
                    items:
                      $ref: "#/components/schemas/GradesObject"
                  standardSummary:
                    type: array
                    description: "The standard summary for the subjects, each item includes properties for each term with the term id as key"
                    items:
                      $ref: "#/components/schemas/AnyValue"
                  teacherEmail:
                    type: array
                    items:
                      type: string
                  gradeRunningTotals:
                    type: array
                    items:
                      $ref: "#/components/schemas/AnyValue"
                  gradeRunningTotalsDisplay:
                    type: boolean
                  displayCategoryRunningAverageOnly:
                    type: boolean
                  overallCumulativeAvgDisplay:
                    type: boolean
                  overallCumulativeAvg:
                    type: array
                    items:
                      type: object
                      required:
                        - runningTotal
                      properties:
                        runningTotal:
                          $ref: "#/components/schemas/NumberAsString"
                  portalNotes:
                    type: string
                  standardsAverageLabel:
                    type: string
                  displayLettersOnly:
                    type: boolean
                  showRunningAverages:
                    type: boolean
                  hideFromAttendance:
                    type: boolean
  /studentSchedule/{subjectOid}/gradeTerms:
    get:
      summary: Get the grade terms for a subject
      operationId: getSubjectGradeTerms
      tags:
        - students
      parameters:
        - name: subjectOid
          in: path
          required: true
          schema:
            type: string
        - name: selectedStudent
          in: query
          schema:
            type: string
        - name: properties
          in: query
          description: "additional properties"
          schema:
            type: string
      responses:
        200:
          description: The list of grade terms
          content:
            application/json:
              schema:
                type: object
                required:
                  - currentTerm
                  - terms
                properties:
                  currentTerm:
                    $ref: "#/components/schemas/GradeTerm"
                  terms:
                    type: array
                    items:
                      $ref: "#/components/schemas/GradeTerm"
                  currentTermIndex:
                    type: integer
  /studentSchedule/{subjectOid}/categoryDetails/pastDue:
    get:
      summary: Get the past due assignments for a subject
      operationId: getPastDueAssignments
      tags:
        - students
      parameters:
        - name: subjectOid
          in: path
          required: true
          schema:
            type: string
        - name: categoryOid
          in: query
          schema:
            type: string
        - name: gradeTermOid
          in: query
          schema:
            type: string
        - name: selectedStudent
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: integer
      responses:
        200:
          description: The past due assignments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentAssignment"
  /studentSchedule/{subjectOid}/categoryDetails/upcoming:
    get:
      summary: Get the upcoming assignments for a subject
      operationId: getUpcomingAssignments
      tags:
        - students
      parameters:
        - name: subjectOid
          in: path
          required: true
          schema:
            type: string
        - name: categoryOid
          description: "E.g., tests, quizzes, assignments, etc."
          in: query
          schema:
            type: string
        - name: gradeTermOid
          in: query
          schema:
            type: string
        - name: selectedStudent
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: integer
      responses:
        200:
          description: The upcoming assignments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentAssignment"
components:
  schemas:
    AnyValue: {}
    BooleanAsString:
      type: string
      enum:
        - true
        - false
    NumberAsString:
      type: string
      format: int32
    GradeAsString:
      type: string
      pattern: ^\d+(\.\d+)?\s[A-Za-z]$
    PercentageAsString:
      type: string
      pattern: ^\d{1,3}\.\d{1,2}%$
    NAString:
      type: string
      enum:
        - "N/A"
    WeekDay:
      type: integer
      #starts from Sunday
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
    User:
      required:
        - clLicense
        - dateFormat
        - districtName
        - firstName
        - googleApi
        - locale
        - menuAccess
        - nameView
        - notificationsEnabled
        - personOid
        - saclLicense
        - timeoutInSeconds
        - userType
      properties:
        clLicense:
          $ref: "#/components/schemas/BooleanAsString"
        dateFormat:
          type: string
        districtName:
          type: string
        firstName:
          type: string
        googleApi:
          type: object
          properties:
            enabled:
              type: boolean
        locale:
          $ref: "#/components/schemas/Locale"
        menuAccess:
          type: object
          properties:
            conduct:
              type: boolean
            assignment:
              type: boolean
            payment:
              type: boolean
            attendance:
              type: boolean
        nameView:
          type: string
        notificationsEnabled:
          $ref: "#/components/schemas/BooleanAsString"
        personOid:
          type: string
        photoPath:
          type: string
        saclLicense:
          $ref: "#/components/schemas/BooleanAsString"
        schoolImgPath:
          type: string
        staffOid:
          type: string
        timeoutInSeconds:
          $ref: "#/components/schemas/NumberAsString"
        userType:
          $ref: "#/components/schemas/UserType"
    Locale:
      type: string
      enum:
        - en_US
        - en_CA
        - fr_CA
    UserType:
      type: string
      enum:
        - STUDENT
        - STAFF
        - FAMILY
    Student:
      required:
        - name
        - studentOid
        - userOid
        - currentWeekAttendance
      properties:
        name:
          type: string
        photo:
          type: string
        studentOid:
          type: string
        userOid:
          type: string
          enum:
            - ""
        currentWeekAttendance:
          type: array
          items:
            $ref: "#/components/schemas/AttendanceEntry"
    AttendanceEntry:
      required:
        - date
        - absent
        - weekDay
        - tardy
        - excused
        - inSession
        - dismissed
      properties:
        date:
          type: number
          format: int64
        absent:
          type: boolean
        weekDay:
          $ref: "#/components/schemas/WeekDay"
        tardy:
          type: boolean
        excused:
          type: boolean
        inSession:
          type: boolean
        dismissed:
          type: boolean
    Page:
      type: object
      required:
        - id
        - title
        - icon
        - category
        - tabs
      properties:
        id:
          type: string
        title:
          type: string
        icon:
          type: string
        category:
          type: string
        tabs:
          type: array
          items:
            type: object
            required:
              - id
              - title
              - widgets
            properties:
              id:
                type: string
              title:
                type: string
              widgets:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - widgetId
                    - title
                    - position
                    - order
                  properties:
                    id:
                      type: string
                    widgetId:
                      type: string
                    title:
                      type: string
                    position:
                      type: string
                      enum:
                        - left
                        - right
                        - top
                        - bottom
                    order:
                      type: integer
    Subject:
      type: object
      required:
        - oid
      properties:
        oid:
          type: string
        relSscMstOid_mstDescription:
          type: string
        relSscMstOid_mstCourseView:
          type: string
          description: e.g., MCMPR11-11, appears only if fieldSetOid is set to a non-existent value
        relSscStdOid_stdViewName:
          type: string
          description: student name, appears only if fieldSetOid is set to a non-existent value
        relSscMstOid_mstStaffView:
          type: array
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
              email:
                type: string
        relSscMstOid_relMstCskOid_cskGrdInpHide:
          type: boolean
        relSscMstOid_mstRoomView:
          type: string
          description: Room
    StudentAssignment:
      type: object
      required:
        - name
        - description
        - classDescription
        - attachments
        - oid
        - dateDue
        - staffGoogleDriveAccessConfigured
        - categoryOid
        - classAverage
        - onlineSubmissionEnabled
        - scoreElements
        - totalPoints
        - term
        - category
        - columnCode
        - hideFromGradeInput
        - assignedDate
        - dueDate
        - isUngradedAssignment
        - hasStudentEditableGoogleDriveFile
      properties:
        name:
          type: string
        description:
          type: string
          description: "The description for the task, can be empty"
        classDescription:
          type: string
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/AnyValue"
        oid:
          type: string
        dateDue:
          type: number
          format: int64
        staffGoogleDriveAccessConfigured:
          type: boolean
        categoryOid:
          type: string
        classAverage:
          $ref: "#/components/schemas/NumberAsString"
          description: "The class average for the task, can be empty"
        onlineSubmissionEnabled:
          type: boolean
        remark:
          type: string
        scoreElements:
          type: array
          items:
            type: object
            properties:
              specialCode:
                type: boolean
              score:
                type: string
              scoreLabel:
                type: string
              gradebookColumnDefinitionOid:
                type: string
              gradebookScore:
                type: string
              assignmentRepositoryItemOid:
                type: string
              questionSetInstanceOid:
                type: string
              gradedQuizReviewIndicator:
                type: boolean
              scorePercent:
                type: string
              scoreMessage:
                type: string
              scoreOverride:
                type: string
              scoreDescription:
                type: string
              pointMax:
                type: string
              standardBased:
                type: boolean
        totalPoints:
          type: number
        term:
          type: string
        category:
          type: string
        gradeScale:
          type: string
        columnCode:
          type: string
        hideFromGradeInput:
          type: boolean
        assignedDate:
          type: number
          format: int64
        dueDate:
          type: number
          format: int64
        isUngradedAssignment:
          type: boolean
        hasStudentEditableGoogleDriveFile:
          type: boolean
    GradesObject:
      type: object
      required:
        - categoryOid
        - overall
        - category
      properties:
        categoryOid:
          type: string
        overall:
          $ref: "#/components/schemas/GradeAsString"
        running:
          $ref: "#/components/schemas/GradeAsString"
        category:
          type: string
        Q1:
          $ref: "#/components/schemas/GradeAsString"
          nullable: true
        percentageQ1:
          oneOf:
            - $ref: "#/components/schemas/PercentageAsString"
            - $ref: "#/components/schemas/NAString"
        avgViewQ1:
          $ref: "#/components/schemas/GradeAsString"
          nullable: true
        Q2:
          $ref: "#/components/schemas/GradeAsString"
          nullable: true
        percentageQ2:
          oneOf:
            - $ref: "#/components/schemas/PercentageAsString"
            - $ref: "#/components/schemas/NAString"
        avgViewQ2:
          $ref: "#/components/schemas/GradeAsString"
          nullable: true
        Q3:
          $ref: "#/components/schemas/GradeAsString"
          nullable: true
        percentageQ3:
          oneOf:
            - $ref: "#/components/schemas/PercentageAsString"
            - $ref: "#/components/schemas/NAString"
        avgViewQ3:
          $ref: "#/components/schemas/GradeAsString"
          nullable: true
        Q4:
          $ref: "#/components/schemas/GradeAsString"
          nullable: true
        percentageQ4:
          oneOf:
            - $ref: "#/components/schemas/PercentageAsString"
            - $ref: "#/components/schemas/NAString"
        avgViewQ4:
          $ref: "#/components/schemas/GradeAsString"
          nullable: true
        S1:
          $ref: "#/components/schemas/GradeAsString"
          nullable: true
        S2:
          $ref: "#/components/schemas/GradeAsString"
          nullable: true
        percentage:
          oneOf:
            - $ref: "#/components/schemas/PercentageAsString"
            - $ref: "#/components/schemas/NAString"
    GradeTerm:
      type: object
      required:
        - gradeTermId
        - oid
      properties:
        gradeTermId:
          type: string
        oid:
          type: string
  responses:
    NotAuthorized:
      description: The requester is unauthorized.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                enum:
                  - "-1"
              message:
                type: string
                enum:
                  - "You are not authorized to access this resource."
  securitySchemes:
    customCookieAuth:
      type: apiKey
      in: header
      name: Custom-Cookie
      description: "Combined cookies: JSESSIONID, ApplicationGatewayAffinity, ApplicationGatewayAffinityCORS"
security:
  - customCookieAuth: []
